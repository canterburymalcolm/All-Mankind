{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/malcolm/Dev/VS/amis/All-Mankind/client/components/PostUpvoter.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updatePost($id: ID!, $votes: Int) {\\n    updatePost(id: $id, votes: $votes) {\\n      __typename\\n      id\\n      votes\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nvar UPDATE_POST_MUTATION = gql(_templateObject());\nexport default function PostUpvoter(_ref) {\n  var votes = _ref.votes,\n      id = _ref.id;\n\n  var _useMutation = useMutation(UPDATE_POST_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updatePost = _useMutation2[0];\n\n  var upvotePost = function upvotePost() {\n    updatePost({\n      variables: {\n        id: id,\n        votes: votes + 1\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        updatePost: {\n          __typename: 'Post',\n          id: id,\n          votes: votes + 1\n        }\n      }\n    });\n  };\n\n  return __jsx(\"button\", {\n    onClick: function onClick() {\n      return upvotePost();\n    },\n    className: \"jsx-852540806\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, votes, __jsx(_JSXStyle, {\n    id: \"852540806\",\n    __self: this\n  }, \"button.jsx-852540806{background-color:transparent;border:1px solid #e4e4e4;color:#000;}button.jsx-852540806:active{background-color:transparent;}button.jsx-852540806:before{-webkit-align-self:center;-ms-flex-item-align:center;align-self:center;border-color:transparent transparent #000000 transparent;border-style:solid;border-width:0 4px 6px 4px;content:'';height:0;margin-right:5px;width:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWxjb2xtL0Rldi9WUy9hbWlzL0FsbC1NYW5raW5kL2NsaWVudC9jb21wb25lbnRzL1Bvc3RVcHZvdGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFDa0IsQUFHd0MsQUFLQSxBQUdYLDZCQVBPLEFBSzNCLHlCQUphLFdBQ2IsTUFNMkQseURBQ3RDLG1CQUNRLDJCQUNoQixXQUNGLFNBQ1EsaUJBQ1QsUUFDViIsImZpbGUiOiIvVXNlcnMvbWFsY29sbS9EZXYvVlMvYW1pcy9BbGwtTWFua2luZC9jbGllbnQvY29tcG9uZW50cy9Qb3N0VXB2b3Rlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZU11dGF0aW9uIH0gZnJvbSAnQGFwb2xsby9yZWFjdC1ob29rcydcbmltcG9ydCBncWwgZnJvbSAnZ3JhcGhxbC10YWcnXG5cbmNvbnN0IFVQREFURV9QT1NUX01VVEFUSU9OID0gZ3FsYFxuICBtdXRhdGlvbiB1cGRhdGVQb3N0KCRpZDogSUQhLCAkdm90ZXM6IEludCkge1xuICAgIHVwZGF0ZVBvc3QoaWQ6ICRpZCwgdm90ZXM6ICR2b3Rlcykge1xuICAgICAgX190eXBlbmFtZVxuICAgICAgaWRcbiAgICAgIHZvdGVzXG4gICAgfVxuICB9XG5gXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFBvc3RVcHZvdGVyICh7IHZvdGVzLCBpZCB9KSB7XG4gIGNvbnN0IFt1cGRhdGVQb3N0XSA9IHVzZU11dGF0aW9uKFVQREFURV9QT1NUX01VVEFUSU9OKVxuXG4gIGNvbnN0IHVwdm90ZVBvc3QgPSAoKSA9PiB7XG4gICAgdXBkYXRlUG9zdCh7XG4gICAgICB2YXJpYWJsZXM6IHtcbiAgICAgICAgaWQsXG4gICAgICAgIHZvdGVzOiB2b3RlcyArIDFcbiAgICAgIH0sXG4gICAgICBvcHRpbWlzdGljUmVzcG9uc2U6IHtcbiAgICAgICAgX190eXBlbmFtZTogJ011dGF0aW9uJyxcbiAgICAgICAgdXBkYXRlUG9zdDoge1xuICAgICAgICAgIF9fdHlwZW5hbWU6ICdQb3N0JyxcbiAgICAgICAgICBpZCxcbiAgICAgICAgICB2b3Rlczogdm90ZXMgKyAxXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IHVwdm90ZVBvc3QoKX0+XG4gICAgICB7dm90ZXN9XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIGJ1dHRvbiB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2U0ZTRlNDtcbiAgICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgfVxuICAgICAgICBidXR0b246YWN0aXZlIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgfVxuICAgICAgICBidXR0b246YmVmb3JlIHtcbiAgICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjMDAwMDAwIHRyYW5zcGFyZW50O1xuICAgICAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICAgICAgYm9yZGVyLXdpZHRoOiAwIDRweCA2cHggNHB4O1xuICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICAgICAgICB3aWR0aDogMDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvYnV0dG9uPlxuICApXG59XG4iXX0= */\\n/*@ sourceURL=/Users/malcolm/Dev/VS/amis/All-Mankind/client/components/PostUpvoter.js */\"));\n}","map":{"version":3,"sources":["/Users/malcolm/Dev/VS/amis/All-Mankind/client/components/PostUpvoter.js"],"names":["React","useMutation","gql","UPDATE_POST_MUTATION","PostUpvoter","votes","id","updatePost","upvotePost","variables","optimisticResponse","__typename"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,oBAAoB,GAAGD,GAAH,mBAA1B;AAUA,eAAe,SAASE,WAAT,OAAqC;AAAA,MAAbC,KAAa,QAAbA,KAAa;AAAA,MAANC,EAAM,QAANA,EAAM;;AAAA,qBAC7BL,WAAW,CAACE,oBAAD,CADkB;AAAA;AAAA,MAC3CI,UAD2C;;AAGlD,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBD,IAAAA,UAAU,CAAC;AACTE,MAAAA,SAAS,EAAE;AACTH,QAAAA,EAAE,EAAFA,EADS;AAETD,QAAAA,KAAK,EAAEA,KAAK,GAAG;AAFN,OADF;AAKTK,MAAAA,kBAAkB,EAAE;AAClBC,QAAAA,UAAU,EAAE,UADM;AAElBJ,QAAAA,UAAU,EAAE;AACVI,UAAAA,UAAU,EAAE,MADF;AAEVL,UAAAA,EAAE,EAAFA,EAFU;AAGVD,UAAAA,KAAK,EAAEA,KAAK,GAAG;AAHL;AAFM;AALX,KAAD,CAAV;AAcD,GAfD;;AAiBA,SACE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMG,UAAU,EAAhB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KADH;AAAA;AAAA;AAAA,6vFADF;AAyBD","sourcesContent":["import React from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\n\nconst UPDATE_POST_MUTATION = gql`\n  mutation updatePost($id: ID!, $votes: Int) {\n    updatePost(id: $id, votes: $votes) {\n      __typename\n      id\n      votes\n    }\n  }\n`\n\nexport default function PostUpvoter ({ votes, id }) {\n  const [updatePost] = useMutation(UPDATE_POST_MUTATION)\n\n  const upvotePost = () => {\n    updatePost({\n      variables: {\n        id,\n        votes: votes + 1\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        updatePost: {\n          __typename: 'Post',\n          id,\n          votes: votes + 1\n        }\n      }\n    })\n  }\n\n  return (\n    <button onClick={() => upvotePost()}>\n      {votes}\n      <style jsx>{`\n        button {\n          background-color: transparent;\n          border: 1px solid #e4e4e4;\n          color: #000;\n        }\n        button:active {\n          background-color: transparent;\n        }\n        button:before {\n          align-self: center;\n          border-color: transparent transparent #000000 transparent;\n          border-style: solid;\n          border-width: 0 4px 6px 4px;\n          content: '';\n          height: 0;\n          margin-right: 5px;\n          width: 0;\n        }\n      `}</style>\n    </button>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}