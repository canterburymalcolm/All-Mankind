{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/malcolm/Dev/VS/amis/All-Mankind/client/components/ProductGroup/ProductGroup.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query GetCatalogItems($shopId: ID!, $first: ConnectionLimitInt, $last: ConnectionLimitInt, \\n                        $before: ConnectionCursor, $after: ConnectionCursor, $sortBy: CatalogItemSortByField, \\n                        $sortByPriceCurrencyCode: String, $sortOrder: SortOrder) {\\n      catalogItems(shopIds: [$shopId], first: $first, last: $last, before: $before,\\n                   after: $after, sordBy: $sortBy, sortByPriceCurrencyCode: $sortByPriceCurrencyCode, \\n                   sortOrder: $sortOrder) {\\n      totalCount\\n      pageInfo {\\n        endCursor\\n        startCursor\\n        hasNextPage\\n        hasPreviousPage\\n      }\\n      edges {\\n        cursor\\n        node {\\n          _id\\n          ... on CatalogItemProduct {\\n            product {\\n              _id\\n              title\\n              slug\\n              description\\n              vendor\\n              pricing {\\n                compareAtPrice {\\n                  displayAmount\\n                }\\n                displayPrice\\n              }\\n              primaryImage {\\n                URLs {\\n                  small\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport ProductGroupItem from './ProductGroupItem';\nexport var GET_CATALOG_ITEMS = gql(_templateObject());\n\nfunction ProductGroup() {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Product Group\"), __jsx(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(ProductGroupItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })));\n}\n\nexport default ProductGroup;","map":{"version":3,"sources":["/Users/malcolm/Dev/VS/amis/All-Mankind/client/components/ProductGroup/ProductGroup.js"],"names":["React","Fragment","useQuery","gql","ProductGroupItem","GET_CATALOG_ITEMS","ProductGroup"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,OAAO,IAAMC,iBAAiB,GAAGF,GAAH,mBAAvB;;AA4CP,SAASG,YAAT,GAAyB;AACvB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAQD;;AAED,eAAeA,YAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport ProductGroupItem from './ProductGroupItem';\n\nexport const GET_CATALOG_ITEMS = gql`\n  query GetCatalogItems($shopId: ID!, $first: ConnectionLimitInt, $last: ConnectionLimitInt, \n                        $before: ConnectionCursor, $after: ConnectionCursor, $sortBy: CatalogItemSortByField, \n                        $sortByPriceCurrencyCode: String, $sortOrder: SortOrder) {\n      catalogItems(shopIds: [$shopId], first: $first, last: $last, before: $before,\n                   after: $after, sordBy: $sortBy, sortByPriceCurrencyCode: $sortByPriceCurrencyCode, \n                   sortOrder: $sortOrder) {\n      totalCount\n      pageInfo {\n        endCursor\n        startCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        cursor\n        node {\n          _id\n          ... on CatalogItemProduct {\n            product {\n              _id\n              title\n              slug\n              description\n              vendor\n              pricing {\n                compareAtPrice {\n                  displayAmount\n                }\n                displayPrice\n              }\n              primaryImage {\n                URLs {\n                  small\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction ProductGroup () {\n  return (\n    <div>\n      <h2>Product Group</h2>\n      <Fragment>\n        <ProductGroupItem />\n      </Fragment>\n    </div>\n  );\n}\n\nexport default ProductGroup;"]},"metadata":{},"sourceType":"module"}